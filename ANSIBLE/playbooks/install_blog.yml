- hosts: localhost
  gather_facts: false
  vars_files:
    - ../vault/aws_credentials.yml
  tasks:
  # ansible-galaxy collection install amazon.aws community.general
  - name: "launching ec2 instance on AWS"
    amazon.aws.ec2_instance:
      key_name: "elven-blog-key"
      instance_type: t2.micro
      image_id: ami-0424a16d0e63b113b
      wait: yes
      exact_count: 1
      tags:
        Name: "vpc-blog-elven"
      state: "{{ DESTROY is not defined | ternary('running','terminated') }}"
      region: "sa-east-1"
      security_group : sg-0baec922c94e28782
      vpc_subnet_id: subnet-0e1c3bd6c7183df05
      network:
        assign_public_ip: true
        delete_on_termination: true
      aws_access_key: "{{ accesskey }}"
      aws_secret_key: "{{ secretkey }}"
    register: ec2

  - name: "Add new Instance to Host group"
    ansible.builtin.add_host:
       hostname: "{{ item.network_interfaces[0].association.public_dns_name }}"
       groupname: webserver
    loop: "{{ ec2.instances }}"
    when: &DESTROY DESTROY is not defined

  - name: "Wait for SSH in Instance"
    ansible.builtin.wait_for:
             host: "{{ item.network_interfaces[0].association.public_dns_name }}"
             port: 22
             state: started
    loop: "{{ ec2.instances }}"
    when: *DESTROY

- name: Install wordpress blog
  hosts: webserver
  gather_facts: true

  vars:
   ROOT_DIR: /var/www/html/blog
   LOG_DIR: /var/log/nginx/
  roles:
  - { role: install_packages, package_list: ['nginx']}
  - { role: create_dirs, DIRS: [ "{{ LOG_DIR }}", "{{ ROOT_DIR }}"], USER: 'nginx', GROUP: 'nginx', MODE: '0744'}

  tasks: 

  - name: Create blog.conf file
    ansible.builtin.template: &nginx_permission
      src: blog.conf.j2
      dest: /etc/nginx/conf.d/blog.conf
      owner: nginx
      group: nginx
      mode: 0644
  
  - name: Create index file
    ansible.builtin.template:
      <<: *nginx_permission
      src: index.html.j2
      dest: /var/www/html/blog/index.html

  - name: Start and enable nginx
    ansible.builtin.service:
      name: nginx
      state: started
      enabled: true

  
  # remove server from /etc/nginx/nginx.conf
  # start and enable nginx

